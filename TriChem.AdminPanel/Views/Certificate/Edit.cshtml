@model TriChem.Models.Certificate.ViewModels.CertificateDetailsVM

@{
    ViewBag.Title = "Edit";
}

<div class="flex-between py-5">
  <h2 class="text-white m-0">Edit Certificate</h2>
  <div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning py-3" })
  </div>
</div>

@using (Html.BeginForm("Edit", "Certificate", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal box-shadow bg-white b-6 p-5">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title_Ar, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Title_Ar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title_Ar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ImageURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryTitle, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.DropDownListFor(c => c.CategoryId, ViewBag.CategoryTitleList as SelectList, "Select Category", new { @class = "form-control", required = "required" })
            </div>
        </div>

        <div class="form-group" style="display: flex; align-items: center;">
            @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8" style="display: flex; align-items: center;">
                <div class="choose_file mr-4">
                    <input type="file" name="Image" accept=".png,.jpg,.jpeg,.gif" style="width: 32px; height: 32px" />
                </div>
                @if (!string.IsNullOrEmpty(Model.ImageURL))
                {
                    var path = Model.ImageURL.Substring(Model.ImageURL.IndexOf('-'));
                    <img src="@Url.Content(path.Substring(path.IndexOf('/')))" style="width: 150px" />
                   
                }
            </div>
        </div>

        <div class="form-group" style="display: flex; align-items: center;">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8" style="display: flex; align-items: center;">
                <div class="choose_file">
                    @if (!string.IsNullOrEmpty(Model.FilePath))
                    {
                        var filePath = Model.FilePath.Substring(Model.FilePath.IndexOf('-'));
                        <a href="@Url.Content(filePath.Substring(filePath.IndexOf('/')))"><img src="~/Content/img/pdf.png" /></a>
                    }
                    <input type="file" name="File" accept=".pdf" style="width: 32px; height: 32px" />
                </div>
            </div>
        </div>

        <div class="form-group">
          <div class="col-xs-12 text-center">
            <input type="submit" value="Save" class="btn btn-success" style="padding: 8px 55px;" />
          </div>
        </div>
    </div>
}

