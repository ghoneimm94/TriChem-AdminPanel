@model TriChem.Models.ClientFeedback.ViewModels.ClientFeedbackDetailsVM

@{
    ViewBag.Title = "Create";
}

<div class="flex-between py-5">
  <h2 class="text-white m-0">Create New Client FeedBack</h2>
  <div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning py-3" })
  </div>
</div>

@using (Html.BeginForm("Create", "ClientFeedback", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal box-shadow bg-white b-6 p-5">
   
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientName_Ar, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.ClientName_Ar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientName_Ar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientPosition, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.ClientPosition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientPosition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientPosition_Ar, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.ClientPosition_Ar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientPosition_Ar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Message_Ar, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Message_Ar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Message_Ar, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            <div class="choose_file">
                <input type="file" name="Image" accept=".png,.jpg,.jpeg,.gif" style="width: 32px; height: 32px" required />
            </div>
        </div>
    </div>

    <div class="form-group">
      <div class="col-xs-12 text-center">
        <input type="submit" value="Create" class="btn btn-success" style="padding: 8px 55px;" />
      </div>
    </div>
</div>
}
