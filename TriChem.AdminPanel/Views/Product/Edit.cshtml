@model TriChem.Models.Product.ViewModels.ProductDetailsVM

@{
    ViewBag.Title = "Edit";
}

<div class="flex-between py-5">
  <h2 class="text-white m-0">Edit Product</h2>
  <div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning py-3" })
  </div>
</div>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal box-shadow bg-white b-6 p-5">

  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  <div class="form-group">
    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.Title_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Title_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Title_Ar, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.SubTitle_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.SubTitle_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.SubTitle_Ar, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.Description_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Description_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Description_Ar, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.TypicalApplication, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.TypicalApplication, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.TypicalApplication, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.TypicalApplication_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.TypicalApplication_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.TypicalApplication_Ar, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group" style="display:none">
    @Html.LabelFor(model => model.DataSheetPath, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.DataSheetPath, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.DataSheetPath, "", new { @class = "text-danger" })
      <span>
        @if (!string.IsNullOrEmpty(Model.DataSheetPath))
        {
          <a href="@Url.Content(Model.DataSheetPath)"><img src="~/Content/img/pdf.png" /></a>
        }
      </span>
    </div>
  </div>
  <div class="form-group" style="display:none">
    @Html.LabelFor(model => model.DataSheetPath_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.DataSheetPath_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.DataSheetPath_Ar, "", new { @class = "text-danger" })
      <span>
        @if (!string.IsNullOrEmpty(Model.DataSheetPath_Ar))
        {
          <a href="@Url.Content(Model.DataSheetPath_Ar)"><img src="~/Content/img/pdf.png" /></a>
        }
      </span>
    </div>
  </div>
  <div class="form-group" style="display:none">
    @Html.LabelFor(model => model.CertificatePath, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
      @Html.EditorFor(model => model.CertificatePath, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.CertificatePath, "", new { @class = "text-danger" })
      <span>
        @if (!string.IsNullOrEmpty(Model.CertificatePath))
        {
          <a href="@Url.Content(Model.CertificatePath)"><img src="~/Content/img/pdf.png" /></a>
        }
      </span>
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.ProductFeatures, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.ProductFeatures, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.ProductFeatures, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.ProductFeatures_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.ProductFeatures_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.ProductFeatures_Ar, "", new { @class = "text-danger" })
    </div>
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Properties, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Properties, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Properties, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.Properties_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Properties_Ar, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Properties_Ar, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Index, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-4">
      @Html.EditorFor(model => model.Index, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Index, "", new { @class = "text-danger" })
      </div>

      @Html.LabelFor(model => model.CategoryTitle, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-4">
        @Html.DropDownListFor(c => c.CategoryId, ViewBag.CategoryTitleList as SelectList, "Select Category", new { @class = "form-control", required = "required" })
      </div>

    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.DataSheetPath, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-4">
        <div class="choose_file">
          <input type="file" name="DataSheet" accept=".pdf" style="width: 32px; height: 32px" />
          <span>
            @if (!string.IsNullOrEmpty(Model.DataSheetPath))
            {
              <a href="@Url.Content(Model.DataSheetPath)"><img src="~/Content/img/pdf.png" /></a>
            }
          </span>
        </div>
      </div>

      @Html.LabelFor(model => model.DataSheetPath_Ar, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-4">
        <div class="choose_file">
          <input type="file" name="DataSheet_Ar" accept=".pdf" style="width: 32px; height: 32px" />
          <span>
            @if (!string.IsNullOrEmpty(Model.DataSheetPath_Ar))
            {
              <a href="@Url.Content(Model.DataSheetPath_Ar)"><img src="~/Content/img/pdf.png" /></a>
            }
          </span>
        </div>
      </div>

      @Html.LabelFor(model => model.CertificatePath, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-4">
        <div class="choose_file">
          <input type="file" name="Certificate" accept=".pdf" style="width: 32px; height: 32px" />
          <span>
            @if (!string.IsNullOrEmpty(Model.CertificatePath))
            {
              <a href="@Url.Content(Model.CertificatePath)"><img src="~/Content/img/pdf.png" /></a>
            }
          </span>
        </div>
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ImageURLs, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-4">
        @Html.Hidden("ImageURL", Model.ImageURLs)

        @foreach (var item in Model.ImageURLs.Select((value, i) => new { i, value }))
        {
          if (!string.IsNullOrEmpty(item.value))
          {
            var path = item.value.Substring(item.value.IndexOf('-'));

            <div id="@item.i">
              <img src="@Url.Content(path.Substring(path.IndexOf('/')))" style="width: 150px" />
              <a href="javascript:void(0);" data-id="@item.value" id="@item.i" class="deleteItem">X</a>
            </div>
          }
        }

        <div class="choose_file">
          <input type="file" name="Images" accept=".png,.jpg,.jpeg,.gif" multiple style="width: 32px; height: 32px" />
        </div>
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.LinkId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(c => c.LinkId, ViewBag.ProductTitleList as SelectList, "Select Related Products", new { @class = "form-control", required = "required", multiple = "multiple" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-xs-12 text-center">
        <input type="submit" value="Save" class="btn btn-success" style="padding: 8px 55px;" />
      </div>
    </div>
  </div>
}


<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script>
    $('.deleteItem').click(function (e) {
           e.preventDefault();
           var $ctrl = $(this);
           if (confirm('Do you really want to delete this file?')) {
               $.ajax({
                   url: '@Url.Action("DeleteFile")',
                   type: 'POST',
                   data: { url: $(this).data('id') }
               }).done(function (data) {
                   if (data.Result == "OK") {
                       $ctrl.attr('id')
                       $('#' + $ctrl.attr('id')).remove();
                   }
                   else if (data.Result.Message) {
                       alert(data.Result.Message);
                   }
               }).fail(function () {
                   alert("There is something wrong. Please try again.");
               })

           }
       });
</script>